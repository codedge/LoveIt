{"version":3,"sources":["theme.js"],"names":["Util","elements","handler","i","length","document","documentElement","scrollTop","body","window","matchMedia","matches","Theme","util","newScrollTop","getScrollTop","oldScrollTop","scrollEventSet","Set","resizeEventSet","menuToggleMobile","getElementById","menuMobile","_menuMobileOnScroll","classList","remove","isMobile","onclick","toggle","add","delete","forEach","getElementsByClassName","button","isDark","localStorage","setItem","initEcharts","querySelectorAll","block","codes","code","lang","className","toLowerCase","chroma","createElement","table","appendChild","tbody","tr","td","parentElement","replaceChild","wrapper","num","header","innerHTML","id","tocCore","isTocStatic","tocContentStatic","removeChild","_tocOnScroll","tocContentAuto","toc","page","style","maxWidth","getBoundingClientRect","left","_tocLinks","getElementsByTagName","_tocLis","_headerLinks","headerIsFixed","desktopHeaderMode","headerHeight","offsetHeight","TOP_SPACING","minTocTop","offsetTop","minScrollTop","footerTop","maxTocTop","height","maxScrollTop","position","top","link","INDEX_SPACING","activeTocIndex","thisTop","nextTop","parent","mermaidArr","mermaid","initialize","startOnLoad","theme","element","mermaidAPI","render","contentMap","svgCode","echartsArr","_echartsArr","dispose","chart","echarts","init","renderer","setOption","JSON","parse","push","_echartsOnResize","resize","typeitArr","group","typeone","instance","TypeIt","strings","afterComplete","destroy","go","mobileHeaderMode","SmoothScroll","speed","speedAsDuration","headers","toTopButton","addEventListener","scroll","display","_scrollTimeout","setTimeout","event","_resizeTimeout","initMenuMobile","initToc","initSmoothScroll","initMermaid","initSwitchTheme","initHighlight","initTable","initHeaderLink","initTypeit","onScroll","onResize","themeInit","readyState"],"mappings":"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","file":"theme.min.js","sourceRoot":"../../src/js","sourcesContent":["(() => {\n    'use strict';\n\n    class Util {\n        forEach(elements, handler) {\n            elements = elements || [];\n            for (let i = 0; i < elements.length; i++) {\n                handler(elements[i]);\n            }\n        }\n\n        getScrollTop() {\n            return (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n        }\n\n        isMobile() {\n            return window.matchMedia('only screen and (max-width: 680px)').matches;\n        }\n\n        isTocStatic() {\n            return window.matchMedia('only screen and (max-width: 960px)').matches;\n        }\n    }\n\n    class Theme {\n        constructor() {\n            this.util = new Util();\n            this.newScrollTop = this.util.getScrollTop();\n            this.oldScrollTop = this.newScrollTop;\n            this.scrollEventSet = new Set();\n            this.resizeEventSet = new Set();\n        }\n\n        initMenuMobile() {\n            const menuToggleMobile = document.getElementById('menu-toggle-mobile');\n            const menuMobile = document.getElementById('menu-mobile');\n            this._menuMobileOnScroll = this._menuMobileOnScroll || (() => {\n                menuToggleMobile.classList.remove('active');\n                menuMobile.classList.remove('active');\n            });\n            if (this.util.isMobile()) {\n                menuToggleMobile.onclick = () => {\n                    menuToggleMobile.classList.toggle('active');\n                    menuMobile.classList.toggle('active');\n                };\n                this.scrollEventSet.add(this._menuMobileOnScroll);\n            } else {\n                this.scrollEventSet.delete(this._menuMobileOnScroll);\n            }\n        }\n\n        initSwitchTheme() {\n            this.util.forEach(document.getElementsByClassName('theme-switch'), (button) => {\n                button.onclick = () => {\n                    document.body.classList.toggle('dark-theme');\n                    window.isDark = !window.isDark;\n                    window.localStorage && window.localStorage.setItem('theme', window.isDark ? 'dark' : 'light');\n                    this.initEcharts();\n                };\n            });\n        }\n\n        initHighlight() {\n            this.util.forEach(document.querySelectorAll('.highlight > .chroma'), (block) => {\n                const codes = block.querySelectorAll('pre.chroma > code');\n                const code = codes[codes.length - 1];\n                const lang = code ? code.className.toLowerCase() : '';\n                block.className += ' ' + lang;\n            });\n            this.util.forEach(document.querySelectorAll('.highlight > pre.chroma'), (block) => {\n                const chroma = document.createElement('div');\n                chroma.className = block.className;\n                const table = document.createElement('table');\n                chroma.appendChild(table);\n                const tbody = document.createElement('tbody');\n                table.appendChild(tbody);\n                const tr = document.createElement('tr');\n                tbody.appendChild(tr);\n                const td = document.createElement('td');\n                tr.appendChild(td);\n                block.parentElement.replaceChild(chroma, block);\n                td.appendChild(block);\n            });\n        }\n\n        initTable() {\n            this.util.forEach(document.querySelectorAll('.content table'), (table) => {\n                const wrapper = document.createElement('div');\n                wrapper.className = 'table-wrapper';\n                table.parentElement.replaceChild(wrapper, table);\n                wrapper.appendChild(table);\n            });\n        }\n\n        initHeaderLink() {\n            for (let num = 1; num <= 6; num++) {\n                this.util.forEach(document.querySelectorAll('.page.single .content > h' + num), (header) => {\n                    header.classList.add('headerLink');\n                    header.innerHTML = `<a href=\"#${header.id}\" class=\"header-mark\"></a>${header.innerHTML}`;\n                });\n            }\n        }\n\n        initToc() {\n            const tocCore = document.getElementById('TableOfContents');\n            if (tocCore === null) return;\n            if (this.util.isTocStatic()) {\n                const tocContentStatic = document.getElementById('toc-content-static');\n                if (tocCore.parentElement !== tocContentStatic) {\n                    tocCore.parentElement.removeChild(tocCore);\n                    tocContentStatic.appendChild(tocCore);\n                }\n                if (this._tocOnScroll) this.scrollEventSet.delete(this._tocOnScroll);\n            } else {\n                const tocContentAuto = document.getElementById('toc-content-auto');\n                if (tocCore.parentElement !== tocContentAuto) {\n                    tocCore.parentElement.removeChild(tocCore);\n                    tocContentAuto.appendChild(tocCore);\n                }\n                const toc = document.getElementById('toc-auto');\n                const page = document.getElementsByClassName('page')[0];\n                toc.style.maxWidth = `${page.getBoundingClientRect().left - 20}px`;\n                this._tocLinks = this._tocLinks || tocCore.getElementsByTagName('a');\n                this._tocLis = this._tocLis || tocCore.getElementsByTagName('li');\n                this._headerLinks = this._headerLinks || document.getElementsByClassName('headerLink') || [];\n                const headerIsFixed = window.desktopHeaderMode !== 'normal';\n                const headerHeight = document.getElementById('header-desktop').offsetHeight;\n                const TOP_SPACING = 20 + (headerIsFixed ? headerHeight : 0);\n                const minTocTop = toc.offsetTop;\n                const minScrollTop = minTocTop - TOP_SPACING + (headerIsFixed ? 0 : headerHeight);\n                this._tocOnScroll = this._tocOnScroll || (() => {\n                    const footerTop = document.getElementById('post-footer').offsetTop;\n                    const maxTocTop = footerTop - toc.getBoundingClientRect().height;\n                    const maxScrollTop = maxTocTop - TOP_SPACING + (headerIsFixed ? 0 : headerHeight);\n                    if (this.newScrollTop < minScrollTop) {\n                        toc.style.position = 'absolute';\n                        toc.style.top = `${minTocTop}px`;\n                    } else if (this.newScrollTop > maxScrollTop) {\n                        toc.style.position = 'absolute';\n                        toc.style.top = `${maxTocTop}px`;\n                    } else {\n                        toc.style.position = 'fixed';\n                        toc.style.top = `${TOP_SPACING}px`;\n                    }\n\n                    this.util.forEach(this._tocLinks, (link) => { link.classList.remove('active'); });\n                    this.util.forEach(this._tocLis, (link) => { link.classList.remove('has-active'); });\n                    const INDEX_SPACING = 20 + (headerIsFixed ? headerHeight : 0);\n                    let activeTocIndex = this._headerLinks.length - 1;\n                    for (let i = 0; i < this._headerLinks.length - 1; i++) {\n                        const thisTop = this._headerLinks[i].getBoundingClientRect().top;\n                        const nextTop = this._headerLinks[i + 1].getBoundingClientRect().top;\n                        if ((i == 0 && thisTop > INDEX_SPACING)\n                         || (thisTop <= INDEX_SPACING && nextTop > INDEX_SPACING)) {\n                            activeTocIndex = i;\n                            break;\n                        }\n                    }\n                    if (activeTocIndex !== -1) {\n                        this._tocLinks[activeTocIndex].classList.add('active');\n                        let parent = this._tocLinks[activeTocIndex].parentElement;\n                        while (parent !== tocCore) {\n                            parent.classList.add('has-active');\n                            parent = parent.parentElement.parentElement;\n                        }\n                    }\n                });\n                this._tocOnScroll();\n                this.scrollEventSet.add(this._tocOnScroll);\n            }\n        }\n\n        initMermaid() {\n            if (window.mermaidArr) {\n                mermaid.initialize({startOnLoad: false, theme: 'null'});\n                this.util.forEach(window.mermaidArr, (id) => {\n                    const element = document.getElementById(id);\n                    mermaid.mermaidAPI.render('svg-' + id, window.contentMap[id], (svgCode) => {\n                        element.innerHTML = svgCode;\n                    }, element);\n                });\n            }\n        }\n\n        initEcharts() {\n            if (window.echartsArr) {\n                this._echartsArr = this._echartsArr || [];\n                for (let i = 0; i < this._echartsArr.length; i++) {\n                    this._echartsArr[i].dispose();\n                }\n                this._echartsArr = [];\n                this.util.forEach(window.echartsArr, (id) => {\n                    const chart = echarts.init(document.getElementById(id), window.isDark ? 'dark' : 'macarons', {renderer: 'svg'});\n                    chart.setOption(JSON.parse(window.contentMap[id]));\n                    this._echartsArr.push(chart);\n                });\n                this._echartsOnResize = this._echartsOnResize || (() => {\n                    for (let i = 0; i < this._echartsArr.length; i++) {\n                        this._echartsArr[i].resize();\n                    }\n                });\n                this.resizeEventSet.add(this._echartsOnResize);\n            }\n        }\n\n        initTypeit() {\n            if (window.typeitArr) {\n                for (let i = 0; i < window.typeitArr.length; i++) {\n                    const group = window.typeitArr[i];\n                    (function typeone(i) {\n                        const id = group[i];\n                        if (i === group.length - 1) {\n                            new TypeIt(`#${id}`, {\n                                strings: window.contentMap[id],\n                            }).go();\n                            return;\n                        }\n                        let instance = new TypeIt(`#${id}`, {\n                            strings: window.contentMap[id],\n                            afterComplete: () => {\n                                instance.destroy();\n                                typeone(i + 1);\n                            },\n                        }).go();\n                    })(0);\n                }\n            }\n        }\n\n        initSmoothScroll() {\n            if ((!this.util.isMobile() && window.desktopHeaderMode === 'normal')\n              || (this.util.isMobile() && window.mobileHeaderMode === 'normal')) {\n                new SmoothScroll('[href^=\"#\"]', {speed: 300, speedAsDuration: true});\n            } else {\n                new SmoothScroll('[href^=\"#\"]', {speed: 300, speedAsDuration: true, header: '#header-desktop'});\n            }\n        }\n\n        onScroll() {\n            const headers = [];\n            if (window.desktopHeaderMode === 'auto') headers.push(document.getElementById('header-desktop'));\n            if (window.mobileHeaderMode === 'auto') headers.push(document.getElementById('header-mobile'));\n            this.util.forEach(headers, (header) => {\n                header.classList.add('animated');\n                header.classList.add('faster');\n            });\n            const toTopButton = document.getElementById('dynamic-to-top');\n            const MIN_SCROLL = 20;\n            window.addEventListener('scroll', () => {\n                this.newScrollTop = this.util.getScrollTop();\n                const scroll = this.newScrollTop - this.oldScrollTop;\n                this.util.forEach(headers, (header) => {\n                    if (scroll > MIN_SCROLL) {\n                        header.classList.remove('fadeInDown');\n                        header.classList.add('fadeOutUp');\n                    } else if (scroll < - MIN_SCROLL) {\n                        header.classList.remove('fadeOutUp');\n                        header.classList.add('fadeInDown');\n                    }\n                });\n                if (this.newScrollTop > 200) {\n                    if (scroll > MIN_SCROLL) {\n                        toTopButton.classList.remove('fadeInUp');\n                        toTopButton.classList.add('fadeOutDown');\n                    } else if (scroll < - MIN_SCROLL) {\n                        toTopButton.style.display = 'block';\n                        toTopButton.classList.remove('fadeOutDown');\n                        toTopButton.classList.add('fadeInUp');\n                    }\n                } else {\n                    toTopButton.style.display = 'none';\n                }\n                if (!this._scrollTimeout) {\n                    this._scrollTimeout = window.setTimeout(() => {\n                        this._scrollTimeout = null;\n                        for (let event of this.scrollEventSet) event();\n                    }, 10);\n                }\n                this.oldScrollTop = this.newScrollTop;\n            }, false);\n        }\n\n        onResize() {\n            window.addEventListener('resize', () => {\n                if (!this._resizeTimeout) {\n                    this._resizeTimeout = window.setTimeout(() => {\n                        this._resizeTimeout = null;\n                        for (let event of this.resizeEventSet) event();\n                        this.initMenuMobile();\n                        this.initToc();\n                        this.initSmoothScroll();\n                        this.initMermaid()\n                    }, 100);\n                }\n            }, false);\n        }\n\n        init() {\n            this.initMenuMobile();\n            this.initSwitchTheme();\n            this.initHighlight();\n            this.initTable();\n            this.initHeaderLink();\n            this.initMermaid();\n            this.initEcharts();\n            this.initTypeit();\n            this.initToc();\n            this.initSmoothScroll();\n\n            this.onScroll();\n            this.onResize();\n        }\n    }\n\n    const themeInit = () => {\n        const theme = new Theme();\n        theme.init();\n    };\n\n    if (document.readyState !== 'loading') {\n        themeInit();\n    } else {\n        document.addEventListener('DOMContentLoaded', themeInit, false);\n    }\n})();\n"]}